/* 2. flexbox : 일차원으로 요소를 배치하는 방식, 가로 or 세로 */

    /* 2-1. flex-direction : 배치할 방향정하기 */
        /* flex-direction: row; 기본적으로 플렉스박스의 방향은 가로 */
        /* flex-direction: row-reverse; 가로방향이지만 오른쪽에서 왼쪽으로 */
        /* flex-direction: column; 세로방향 */
        /* flex-direction: column-reverse; 세로방향 아래에서 위로 */

    /* 2-2. justify-content, align-items : 정렬하기 */
        /* Main Axis : 요소가 정렬되는 기본 축 */
        /* Cross Axis : 기본 축의 수직인 방향 */
        /* 기본적으로 기본축 방향으로 요소들을 정렬하고, 교차축 방향은 꽉채우게 된다. */

        /* 기본축 정렬 */
        /* justify-content: center; 가운데 정렬 */
        /* justify-content: flex-end; 기본축 맨 끝 정렬 */
        /* justify-content: flex-start;  기본축 맨 앞 정렬 */
        /* justify-content: space-around; 요소 양쪽에 같은 공간을 주고 띄엄 띄엄 */
        /* justify-content: space-btwwen; 양끝을 꽉채우게 공간주면서 채움 */
        /* justyfy-content: space-evenly; 모두 동일한 공간을 주면서 띄엄 띄엄 채움 */

        /* 교차축 정렬: 크기를 꽉채워서 정렬되던게 원래 크기로 변함  */
        /* align-items: center; 가운데 정렬 */
        /* align-items: flex-end; 교차축 맨 끝 정렬*/
        /* align-items: flex-start; 교차축 맨 앞 정렬*/
        /* align-items: strech; 교차축 꽉채우게 늘려서 배치, 이게 default*/

    /* 2-3. flex-wrap : 요소가 넘칠때 어떻게 처리할지 */
        /* flex-wrap: wrap; 넘치는 요소 교차축 방향으로 넘어가서 정렬된다. */

    /* 2-4. gap : 요소 간격 */
        /* 마진을 써도 되지만 좋은 코드는 아니다. */
        /* gap: 숫자px; wrap으로 넘어가는 방향에도 같은 갭이 적용됨*/
        /* gap: 세로갭px 가로갭px !주의! 기본축 교차축과 상관없이 세로, 가로 순서이다. */

    /* 2-5.flex-grow, flex-shrink, flex-basis : 크기는 어떻게 늘이거나 줄일지 */
        /* flex-grow: 1; 요소를 늘려서 빈공간을 꽉채우고 싶을 때 사용, 숫자는 값이 클스록 비례해서 더 늘어남*/
        /* flex-shrink: 1; 너비나 높이가 넘쳐도 줄여서 맞춰줌, 숫자는 값이 클수록 비례해서 더 줄어듬, 0을쓰면 줄어들지 않고 고정됨*/


* {
    box-sizing: border-box;
}

.body {
    background-color: #f9fafc;
    margin: 60px;
}

.container {
    border: 5px dashed #cacfd9;
    width: 500px;
    height: 500px;
    display: flex;  /* 플렉스 박스 생성 */
    /* flex-direction: column; 세로 정렬 */
    /* justify-content: center;  기본축 가운데 정렬 */
    /* align-items: center; 교차축 가운데 정렬 */
    /* flex-wrap: wrap; */
    /* gap: 30px; */
}

.box {
    border-radius: 15px;
    color: #f9fafc;
    padding: 30px;
}

.red {
    background-color: #e46e80;
}

.green {
    background-color: #32b9c1;
    /* flex-grow: 1; 요소를 늘려서 빈공간을 꽉채우고 싶을 때 사용 */
}

.blue {
    background-color: #5195ee;
}


